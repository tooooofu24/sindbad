openapi: 3.0.0
info:
  description: SindbadのAPI
  version: "0"
  title: Sindbad API 仕様書
security:
  - Bearer: []
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: トークン認証
  schemas:
    User:
      type: object
      required:
        - id
        - uid
        - password
      properties:
        id:
          type: integer
          format: int64
          example: 1
        uid:
          type: string
          format: uid
          example: d5af9aa2-c261-441f-baff-1bbb976b6d5e
        name:
          type: string
          example: テストユーザ
        email:
          type: string
          format: email
          example: test@email.com
        password:
          type: string
          example: $2y$10$ZFRuDq2bEz5xXR529aK.DO/mrkdUNc.NCGrorjpUbYKgpCBmQz7Ca
        icon_url:
          type: string
          example: ''
        email_verified_at:
          type: string
          format: date-time
          example: '2022-01-05 16:14:56'
        token:
          type: string
          example: 3|gMB6sH4rTEZ5ipgDCeOQxCoJ3QlTgaiLJKvlMNoG
    Spot:
      type: object
      required:
        - id
        - name
        - converted_name
        - pref
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: 旭川市旭山動物園
        converted_name:
          type: string
          example: あさひかわしあさひやまどうぶつえん
        thumbnail_url:
          type: string
          example: >-
            https://upload.wikimedia.org/wikipedia/commons/e/ef/%E6%97%AD%E5%B7%9D%E5%B8%82%E6%97%AD%E5%B1%B1%E5%8B%95%E7%89%A9%E5%9C%92_-_panoramio.jpg
        pref:
          type: string
          example: 北海道
          description: 「都道府県」を含む形で指定
        count:
          type: integer
          description: 使用されている数
          example: 5
    Plan:
      type: object
      required:
        - id
        - title
        - start_date_time
        - user
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: 【驚愕】麻雀旅行で麻雀やらないでみた！
        thumbnail_url:
          type: string
          example: >-
            https://upload.wikimedia.org/wikipedia/commons/e/ef/%E6%97%AD%E5%B7%9D%E5%B8%82%E6%97%AD%E5%B1%B1%E5%8B%95%E7%89%A9%E5%9C%92_-_panoramio.jpg
        favorites_count:
          type: integer
          description: いいねされている回数
          example: 13
        count:
          type: integer
          description: 使用されている数
          example: 5
        start_date_time:
          type: string
          format: date-time
          example: '2016-02-26 08:30:00'
        url:
          type: string
          example: 'https://sindbad-travel.com/plans/1?uid=oEbiayrFcqd0YppnUDmE4lpf1'
        user:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
            name:
              type: string
              example: テストユーザ
            icon_url:
              type: string
              example: >-
                https://pbs.twimg.com/profile_images/1362640108965437445/n1SvYSbT.jpg
        planElements:
          type: array
          items:
            $ref: '#/components/schemas/Spot'
    Favorite:
      type: object
      required:
        - id
        - created_at
        - user_id
      properties:
        id:
          type: integer
          format: int64
          example: 1
        created_at:
          type: string
          format: date-time
          example: '2022-01-05 07:15:08'
        user_id:
          type: integer
          format: int64
          example: 1
        plan:
          $ref: '#/components/schemas/Plan'
tags:
  - name: 認証不要
    description: 認証不要のURI

paths:
  /register:
    post:
      tags:
        - 認証不要
      summary: 初回登録
      description: アプリ初回起動時に叩く
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /login:
    post:
      tags:
        - 認証不要
      summary: ログイン
      description: アプリ2回目以降起動時にuidとハッシュ化済みのパスワードで認証する
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - uid
                - password
              properties:
                uid:
                  type: string
                  example: 80a49b06-821d-4893-b625-33acb6f1d0f5
                password:
                  type: string
                  format: password
                  example: $2y$10$NQfd55oUpjHydhGENysbZ.0e408JuX/8a0mH5fC5jri.tBeBCGpWy
                  description: ハッシュ化済みのもの
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: パスワードが間違っています
        '404':
          description: uidが見つかりません
  /login-with-email:
    post:
      tags:
        - 認証不要
      summary: メールアドレスとパスワードでのログイン
      description: メールアドレスとパスワードでのログイン
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: test@email.com
                password:
                  type: string
                  format: password
                  example: $2y$10$NQfd55oUpjHydhGENysbZ.0e408JuX/8a0mH5fC5jri.tBeBCGpWy
                  description: ハッシュ化済みのもの
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      tags:
        - 認証必須
          - Users
      summary: ユーザーデータ取得
      description: ユーザーデータ取得
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: ユーザが見つかりません
    put:
      tags:
        - 認証必須
         - Users
      summary: 【変更】ユーザーデータ更新
      description: ユーザーデータ更新
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required: 
                - password
              properties:
                password:
                  type: string
                  format: password
                  example: $2y$10$NQfd55oUpjHydhGENysbZ.0e408JuX/8a0mH5fC5jri.tBeBCGpWy
                  description: ハッシュ化済みのもの
                name:
                  type: string
                  example: テストユーザ
                icon:
                  description: 「icon_url」の画像ファイル
                  type: string
                  format: binary
                email:
                  type: string
                  example: test@email.com
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: ユーザが見つかりません
        403:
          description: 更新する権限がありません
  /spots:
    get:
      tags:
        - 認証必須
          - Spots
      summary: スポットデータ取得
      description: スポットデータ取得
      parameters:
        - in: query
          name: size
          description: 取得する件数
          schema:
            type: integer
            default: 20
        - in: query
          name: page
          description: 取得したいページ
          schema:
            type: integer
            default: 1
        - in: query
          name: q
          description: 検索したい文字列(半角、全角スペース句切りの単語のLIKE検索ができる)
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Spot'
    post:
      tags:
        - 認証必須
          - Spots
      summary: スポット登録
      description: スポット登録
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - pref
              properties:
                name:
                  type: string
                  example: 金閣
                pref:
                  type: string
                  example: 京都府
                  description: 「都道府県」を付けた形で指定
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spot'
  /plans:
    get:
      tags:
        - 認証必須
          - Plans
      summary: プランデータ取得
      description: プランデータ取得
      parameters:
        - in: query
          name: size
          description: 取得する件数
          schema:
            type: integer
            default: 20
        - in: query
          name: page
          description: 取得したいページ
          schema:
            type: integer
            default: 1
        - in: query
          name: is_mine
          description: 自分の投稿に絞る
          schema:
            type: boolean
            default: false
        - in: query
          name: "spots[]"
          description: spot_idで絞り込み
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
    post:
      tags:
        - 認証必須
          - Plans
      summary: プラン作成
      description: プラン作成
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - start_date_time
              properties:
                title:
                  type: string
                  example: 金沢旅行
                start_date_time:
                  type: string
                  example: 2022-01-01 12:00
                  format: date-time
                public_flag:
                  type: boolean
                  default: false
                thumbnail:
                  description: 「thumbnail_url」用の画像ファイル
                  format: binary
                  type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
  /plans/{id}:
    get:
      tags:
        - 認証必須
          - Plans
      summary: プランデータ取得
      description: プランデータ取得
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 成功
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/Plan'
        '404':
          description: プランが見つかりません
    put:
      tags:
        - 認証必須
          - Plans
      summary: プランデータ更新
      description: 更新時に子要素のPlanElementsを全て削除
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - start_date_time
              properties:
                title:
                  type: string
                  example: 金沢旅行
                start_date_time:
                  type: string
                  example: 2022-01-01 12:00
                  description: datetime型で指定
                thumbnail:
                  description: 「thumbnail_url」用の画像ファイル
                  format: binary
                  type: string
                public_flag:
                  type: boolean
                  default: false
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '404':
          description: ユーザが見つかりません
        403:
          description: 更新する権限がありません
    delete:
      tags:
        - 認証必須
          - Plans
      summary: プランデータ削除
      description: プランデータ削除
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 成功
        '404':
          description: プランが見つかりません
  /plan-elements:
    post:
      tags:
        - 認証必須
          - Plans
      summary: プランの要素作成
      description: Planの更新時にも作り直す必要がある。
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - type
                - plan_id
                - duration_min
              properties:
                type:
                  type: integer
                  example: 1
                  description: 0 => blank, 1 => spot, 2 => transportation
                plan_id:
                  type: integer
                  example: 1
                duration_min:
                  type: integer
                  example: 30
                  description: 0以上の整数で指定
                child_id:
                  type: integer
                  example: 1
                  description: blankのときのみnull許可
                memo:
                  type: string
                  example: 入場料300円、ご飯屋さんもある。
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        404:
          description: プランが見つかりません
        403:
          description: 削除する権限がありません
  /favorites:
    get:
      tags:
        - 認証必須
          - Favorites
      summary: いいねしたプラン取得
      description: ログインユーザのいいねしたプラン取得
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Favorite'
    post:
      tags:
        - 認証必須
          - Favorites
      summary: いいねをする
      description: いいねをする
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - plan_id
              properties:
                plan_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
  /favorites/{id}:
    delete:
      tags:
        - 認証必須
          - Favorites
      summary: いいね取り消し
      description: いいね取り消し
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 成功
        '404':
          description: いいねが見つかりません
        403:
          description: 削除する権限がありません
servers:
  - url: https://sindbad-travel.com/api/v0